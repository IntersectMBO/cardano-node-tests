name: SMASH tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "environemnt that services will be started for. Available options: shelley_qa, preprod, preview, mainnet"
        type: choice
        required: true
        options:
        - shelley-qa
        - preview
        - preprod
        - mainnet
        default: "shelley-qa"
      epochs_to_sync:
        description: "How many epochs db-sync should sync"
        required: true
        default: "1000"
      node_tag:
        description: node tag e.g. 8.1.0-pre, 8.1.1. Tags can have non numeric suffixes !
        required: true
        default: "8.1.1"
      node_version:
        description: node version e.g. 8.1.0, 8.1.1
        required: true
        default: "8.1.1"
      db_sync_branch:
        description: db-sync branch e.g. tags/13.1.1.3
        required: true
        default: "13.1.1.3"
      db_sync_version:
        description: db-sync version e.g. 13.1.1.3
        required: true
        default: "13.1.0.2"

run-name: SMASH tests on ${{ inputs.environment }}

jobs:
  run_smash_tests:
    name: Start services and run SMASH tests
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    permissions:
      checks: write
      pull-requests: write
    timeout-minutes: 300

    steps:
      - name: Setup environment variables
        run: |
          echo 'ENV='${{ github.event.inputs.environment }} >> $GITHUB_ENV
          echo 'EPOCHS='${{ github.event.inputs.epochs_to_sync }} >> $GITHUB_ENV
          echo 'NODE_TAG='${{ github.event.inputs.node_tag }} >> $GITHUB_ENV
          echo 'NODE_VERSION='${{ github.event.inputs.node_version }} >> $GITHUB_ENV
          echo 'DB_SYNC_BRANCH='${{ github.event.inputs.db_sync_branch }} >> $GITHUB_ENV
          echo 'DB_SYNC_VERSION='${{ github.event.inputs.db_sync_version }} >> $GITHUB_ENV
          echo 'SMASH_VERSION='${{ github.event.inputs.smash_version }} >> $GITHUB_ENV


      - name: Checkout repository with SMASH tests
        uses: actions/checkout@v3
        with:
          repository: input-output-hk/cardano-node-tests
          ref: 'smash_tests'


      - name: Start cardano-node
        run: |
          ./.github/workflows/start_node.sh -e ${{ env.ENV }} -t ${{ env.NODE_TAG }} -v ${{ env.NODE_VERSION }}


      - name: Install Postgres
        run: |
          echo $environment
          sudo apt-get update
          sudo apt-get install -y libpq-dev libpq5 postgresql


      - name: Start Postgres service
        run: sudo pg_ctlcluster 14 main start

      - name: Check if Postgres is running
        run: |
          sleep 10
          netstat -an
          ls -al /var/run/postgresql/.s.PGSQL.5432 || true
          ls -al || true


      - name: Create database user
        run: sudo -u postgres createuser --createdb --superuser runner


      - name: Checkout cardano-db-sync repository
        uses: actions/checkout@v3
        with:
          repository: input-output-hk/cardano-db-sync
          path: cardano-db-sync
          ref: ${{ github.event.inputs.db_sync_branch }}


      - name: Setup and start cardano-db-sync
        timeout-minutes: 300
        run: |
          .github/workflows/start_db_sync_and_smash.sh -e ${{ env.ENV }} -v ${{ env.DB_SYNC_VERSION }} -t ${{ env.EPOCHS }}


      - name: Check directory structure
        env:
          environment: ${{ github.event.inputs.environment }}
        run: |
          echo "Current Working Directory: $PWD"
          echo "Contents:"
          ls -l
          echo ""
          echo ""
          echo "cardano-node contents:"
          ls -l cardano-node
          echo ""
          echo ""
          echo "cardano-node configuration directory:"
          ls -l "cardano-node/$environment"
          echo ""
          echo ""
          echo "cardano-db-sync contents:"
          ls -l cardano-db-sync/
          echo ""
          echo "cardano-db-sync ledger contents"
          echo "$PWD"
          ls -l cardano-db-sync/ledger-state/*


      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install pytest requests furl psycopg2 pytest-html


      - name: Start SMASH tests
        env:
          environment: ${{ github.event.inputs.environment }}
        run: |
          cd smash_tests
          pytest -svv --capture=tee-sys --environment $environment --html="test-results/report.html" --self-contained-html --junitxml="test-results/result.xml" test_smash_local_server.py


      - name: Stop services
        if: always()
        run: |
          echo "List running cardano services:"
          ps -ef | grep '[c]ardano'
          echo ""
          echo "killing cardano services..."
          sudo pkill -f cardano
          sleep 10
          echo ""
          echo "List again cardano services:"
          ps -ef | grep '[c]ardano' || true


      - name: Publish test results on GitHub
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "Pytest tests results"
          files: ${{ github.workspace }}/smash_tests/test-results/result.xml


      - name: Publish cardano-db-sync and SMASH logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: db_sync_and smash_logs_${{ env.ENV }}
          path: ${{ github.workspace }}/cardano-db-sync/logs/*


      - name: Publish test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: pytest_results_${{ env.ENV }}
          path: ${{ github.workspace }}/smash_tests/test-results/*