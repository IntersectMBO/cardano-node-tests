name: node sync tests

on:
  workflow_dispatch:
    branches:
      - sync_tests
    inputs:
      tag_no1:
        description: tag number1 - used for initial sync, from clean state
        required: true
      tag_no2:
        description: tag number2 - used for final sync, from existing state
        required: false
        default: "None"
      db_sync_tag_no1:
        description: db_sync tag number1 - used for initial sync, from clean state
        required: false
        default: "None"
      db_sync_tag_no2:
        description: db_sync tag number2 - used for final sync, from existing state
        required: false
        default: "None"

jobs:
  sync_test_mainnet:
    runs-on: ubuntu-latest
    steps:
      - name: trigger the Buildkite pipeline - run sync tests on mainnet
        uses: zegocover/buildkite-pipeline-action@master
        with:
          access_token: '${{ secrets.BUILDKITE_API_ACCESS_TOKEN }}'
          pipeline: 'input-output-hk/qa-sync-tests'
          message: ':github: Triggered by GitHub Action'
          env: '{
          "tag_no1":"${{ github.event.inputs.tag_no1 }}",
          "tag_no2":"${{ github.event.inputs.tag_no2 }}",
          "dt_tag_no1":"${{ github.event.inputs.db_sync_tag_no1 }}",
          "dt_tag_no2":"${{ github.event.inputs.db_sync_tag_no2 }}"
          }'
          branch: 'sync_tests'
  sync_test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        env: [shelley_qa, testnet, staging]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 600
    steps:
      - name: checkout cardano-node-tests repo
        uses: actions/checkout@v2
        with:
          path: cardano_node_tests
      - name: run actions/setup-python@v2
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: install dependencies
        run: |
          pip install requests
          pip install psutil
          pip install sqlite-utils>=2.18
          sqlite-utils --version
          pip install pandas
      - name: checkout sync_tests repo
        run: |
          cd cardano_node_tests
          git config --global user.name "sync_tests"
          git config --global user.email "action@github.com"
          git checkout sync_tests
          echo "current branch1: $(git branch --show-current)"
      - name: run sync test
        run: |
          cd cardano_node_tests
          echo "current branch2: $(git branch --show-current)"
          python sync_tests/node_sync_test.py -t1 "${{ github.event.inputs.tag_no1 }}" -t2 "${{ github.event.inputs.tag_no2 }}" -e ${{ matrix.env }}
      - name: commit and push DB changes for the sync test
        run: |
          cd cardano_node_tests
          echo "current branch3: $(git branch --show-current)"
          git config pull.rebase true
          git pull origin sync_tests
          python sync_tests/node_write_values_to_db.py -e ${{ matrix.env }}
          git add sync_tests/node_sync_tests_results.db
          git add sync_tests/csv_files
          git commit -m "added sync values for tag ${{ github.event.inputs.tag_no1 }} ${{ github.event.inputs.tag_no2 }} - ${{ matrix.env }} - ${{ matrix.os }}"
          git push origin HEAD:sync_tests --force
      - name: generate artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: node_logs_${{ matrix.env }}_${{ matrix.os }}
          path: cardano_node_tests/logfile.log
